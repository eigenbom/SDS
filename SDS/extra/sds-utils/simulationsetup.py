# Outline for simulation setup program.
# BP 20.11.09
import SDS

class Organism(object):
    
    @staticmethod
    def createFromTetmesh(tetmesh):
        o = Organism()
        o.data = SDS.OrganismTools.load(tetmesh.commonprefix())
        return o
    
    def setProcessModel(self,pm):
        self.pm = pm
        o.data.setProcessModel(pm.data) # this sets up the Cell data structure to be ready for process info

    def mesh(self):
        pass
          
class ProcessModel(object):
    def __init__(self,str):
        self.data = SDS.ProcessModel.create(str)
        
    def initialise(self,o):
        pass

class LimbBudModel(ProcessModel):
    def initialise(self,o):
        # look for a .morphogen file, 
        # and perform initialisation logic
        pass

class SceneParameters:
    
    # contains, e.g., 
    #header.t = 0
    #header.dt = 0.001
    #header.kD = 5
    #header.kV = 5
    ##header.kDamp = 1
    #header.density = 10
    #header.collisionInterval = 0
    #header.worldBounds = bounds # are we parsing from str --> AABB --> str ??!
    #header.gravity = gravity
    
    def to_header(self):
        pass

# input:
#  tet mesh
#  processmodel with process info (morphogens)
#  bounds
#  other scene params
# ... extra meshes

# output:
#  either a python "simulation" object (for simpler interfacing with simulator.py)
#  and/or ".cfg" and ".bin" files 

# basic algorithm

def configbuilder(tetmesh, processmodel, sceneparameters, output, comments=""):
    """ builds configs! """  
    o = Organism.createFromTetmesh(tetmesh)
    o.setProcessModel(pm)  
    
    # setup process info: e.g., parse morphogen file
    pm.initialise(o)
    
    # build SimulationHeader
    header = sceneparameters.to_header()
    
    header.frameDataFileName = output + ".bin"
    header.comments = comments
    header.processModel = processmodel.data
    
    # file based case:
    # segment writers
    msw = SDS.MeshSegmentIO(o.mesh())
    osw = SDS.OrganismSegmentIO(o)
    psw = SDS.ProcessModelSegmentIO(pm)
    # sv = SDS.StaticVertSegmentIO(o)
    
    sws = [msw,osw,psw]
    #segmentWriters = std::list<dadawd>???
    SDS.SimulationWriter.writeSimulationHeader(output+".cfg",header,segmentWriters)
    
    # create bin output stream
    out = open(header.frameDataFileName,'wb')
    outbs = out
    # binstream?
    
    # frame! 
    SDS.SimulationWriter.writeFrameDataHeader(outbs);
    SDS.SimulationWriter.writeFrame(outbs,0,0,0,segmentWriters)
    
if __name__=="__main__":
    
    comments = "Automatically generated by simsetup.py %s" % ' '.join(sys.argv[1:])
    configbuilder(tetgenencapsulator(prefix), ProcessModel(pmstr), sceneparameters.parse_command_line(argv), output, comments=comments)
    

