# Copyright 2010  Bart Veldstra
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products 
#    derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

from os import path
import distutils.sysconfig
import sys

Import('base_env')
env = base_env.Clone()

libroot = '../'
includes = ['SDS', 'SDSMath', 'SDSCommon']
libs = ['SDS']
include_path = map(lambda x: path.join(libroot, x, 'include'), includes) 
lib_path = map(lambda x: path.join(libroot, x, 'Release'), libs) 

library_name = 'sds' 
if sys.platform == 'win32':
    library_name = '_' + library_name #what's this for? - ben

if sys.platform=='win32':
    env.Append(WINDOWS_INSERT_DEF=1)
    env.Append(CPPPATH=[r'C:\Python31\include'])
    env.Append(LIBS=['python31'])
    env.Append(LIBPATH=[r'C:\Python31\libs']) 
    env.Tool('swig')
    env.Replace(SWIG = r'c:\lib\swigwin-1.3.40\swig.exe')
    env.Command('_sds.pyd', '_sds.dll', Move("$TARGET", "$SOURCE"))
    env.Clean(library_name, 'lib_sds.a')
else:
    env.Append(CPPPATH=['python3-include'])
    library_prefix = env.subst('$SHLIBPREFIX')
    interface_name = '%s%s' % (library_prefix, library_name)
    env.Append(SWIGFLAGS=['-interface', interface_name])

env.Append(SWIGFLAGS=['-c++', '-python', '-py3'])

env.Append(CPPPATH=include_path)
env.Append(LIBS=libs)
env.Append(LIBPATH=lib_path)

swig_ifaces = ['sds.i']
lib = env.SharedLibrary(library_name, swig_ifaces)
env.Alias('install', '../SDSBlender/src/sds')

if not sys.platform == 'win32':
	env.Install('../SDSBlender/src/sds', lib)

bind_copy = env.Command('../SDSBlender/src/sds/core.py', 'sds.py', Copy('$TARGET', '$SOURCE'))
env.Depends(lib, bind_copy)

# Fix for bad win32 installation
if sys.platform == 'win32':
	env.Command('../SDSBlender/src/sds/_sds.pyd', '_sds.pyd', Copy('$TARGET', '$SOURCE'))
Return("lib")
